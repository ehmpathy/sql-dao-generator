// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`defineQuerySelectExpressionForSqlSchemaProperty should define the select expression correctly for a solo DIRECT_BY_NESTING reference 1`] = `
"(
      SELECT json_build_object(
        'id', geocode.id,
        'uuid', geocode.uuid,
        'latitude', geocode.latitude,
        'longitude', geocode.longitude
      ) AS json_build_object
      FROM geocode WHERE geocode.id = train_located_event.geocode_id
    ) AS geocode"
`;

exports[`defineQuerySelectExpressionForSqlSchemaProperty should define the select expression correctly for a solo IMPLICIT_BY_UUID reference 1`] = `
"(
      SELECT train_engineer.uuid
      FROM train_engineer WHERE train_engineer.id = train.lead_engineer_id
    ) AS lead_engineer_uuid"
`;

exports[`defineQuerySelectExpressionForSqlSchemaProperty should define the select expression correctly for an array of DIRECT_BY_NESTING reference 1`] = `
"(
      SELECT COALESCE(
        json_agg(
          json_build_object(
            'id', geocode.id,
            'uuid', geocode.uuid,
            'latitude', geocode.latitude,
            'longitude', geocode.longitude
          )
          ORDER BY geocode_ref.array_order_index
        ),
        array[]::json[]
      ) AS json_agg
      FROM geocode
      JOIN unnest(train_located_event.geocode_ids) WITH ORDINALITY
        AS geocode_ref (id, array_order_index)
        ON geocode.id = geocode_ref.id
    ) AS geocodes"
`;

exports[`defineQuerySelectExpressionForSqlSchemaProperty should define the select expression correctly for an array of IMPLICIT_BY_UUID references 1`] = `
"(
      SELECT COALESCE(array_agg(train_engineer.uuid ORDER BY train_engineer_ref.array_order_index), array[]::uuid[]) AS array_agg
      FROM train_engineer
      JOIN unnest(train.assigned_engineer_ids) WITH ORDINALITY
        AS train_engineer_ref (id, array_order_index)
        ON train_engineer.id = train_engineer_ref.id
    ) AS assigned_engineer_uuids"
`;
